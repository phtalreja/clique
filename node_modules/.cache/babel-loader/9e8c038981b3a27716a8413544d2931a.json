{"ast":null,"code":"/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nvar sanitizeDOMString = function (untrustedString) {\n  try {\n    if (untrustedString instanceof IonicSafeString) {\n      return untrustedString.value;\n    }\n\n    if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n      return untrustedString;\n    }\n    /**\n     * Create a document fragment\n     * separate from the main DOM,\n     * create a div to do our work in\n     */\n\n\n    var documentFragment_1 = document.createDocumentFragment();\n    var workingDiv = document.createElement('div');\n    documentFragment_1.appendChild(workingDiv);\n    workingDiv.innerHTML = untrustedString;\n    /**\n     * Remove any elements\n     * that are blocked\n     */\n\n    blockedTags.forEach(function (blockedTag) {\n      var getElementsToRemove = documentFragment_1.querySelectorAll(blockedTag);\n\n      for (var elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n        var element = getElementsToRemove[elementIndex];\n\n        if (element.parentNode) {\n          element.parentNode.removeChild(element);\n        } else {\n          documentFragment_1.removeChild(element);\n        }\n        /**\n         * We still need to sanitize\n         * the children of this element\n         * as they are left behind\n         */\n\n\n        var childElements = getElementChildren(element);\n        /* tslint:disable-next-line */\n\n        for (var childIndex = 0; childIndex < childElements.length; childIndex++) {\n          sanitizeElement(childElements[childIndex]);\n        }\n      }\n    });\n    /**\n     * Go through remaining elements and remove\n     * non-allowed attribs\n     */\n    // IE does not support .children on document fragments, only .childNodes\n\n    var dfChildren = getElementChildren(documentFragment_1);\n    /* tslint:disable-next-line */\n\n    for (var childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n      sanitizeElement(dfChildren[childIndex]);\n    } // Append document fragment to div\n\n\n    var fragmentDiv = document.createElement('div');\n    fragmentDiv.appendChild(documentFragment_1); // First child is always the div we did our work in\n\n    var getInnerDiv = fragmentDiv.querySelector('div');\n    return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n  } catch (err) {\n    console.error(err);\n    return '';\n  }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\n\n\nvar sanitizeElement = function (element) {\n  // IE uses childNodes, so ignore nodes that are not elements\n  if (element.nodeType && element.nodeType !== 1) {\n    return;\n  }\n\n  for (var i = element.attributes.length - 1; i >= 0; i--) {\n    var attribute = element.attributes.item(i);\n    var attributeName = attribute.name; // remove non-allowed attribs\n\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n      element.removeAttribute(attributeName);\n      continue;\n    } // clean up any allowed attribs\n    // that attempt to do any JS funny-business\n\n\n    var attributeValue = attribute.value;\n    /* tslint:disable-next-line */\n\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n      element.removeAttribute(attributeName);\n    }\n  }\n  /**\n   * Sanitize any nested children\n   */\n\n\n  var childElements = getElementChildren(element);\n  /* tslint:disable-next-line */\n\n  for (var i = 0; i < childElements.length; i++) {\n    sanitizeElement(childElements[i]);\n  }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\n\n\nvar getElementChildren = function (el) {\n  return el.children != null ? el.children : el.childNodes;\n};\n\nvar isSanitizerEnabled = function () {\n  var win = window;\n  var config = win && win.Ionic && win.Ionic.config;\n\n  if (config) {\n    if (config.get) {\n      return config.get('sanitizerEnabled', true);\n    } else {\n      return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n    }\n  }\n\n  return true;\n};\n\nvar allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nvar blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nvar IonicSafeString =\n/** @class */\nfunction () {\n  function IonicSafeString(value) {\n    this.value = value;\n  }\n\n  return IonicSafeString;\n}();\n\nexport { IonicSafeString as I, sanitizeDOMString as s };","map":{"version":3,"sources":["/Users/priyatalreja/Desktop/spectra/friend-match/node_modules/@ionic/core/dist/esm-es5/index-79d74e0b.js"],"names":["sanitizeDOMString","untrustedString","IonicSafeString","value","isSanitizerEnabled","documentFragment_1","document","createDocumentFragment","workingDiv","createElement","appendChild","innerHTML","blockedTags","forEach","blockedTag","getElementsToRemove","querySelectorAll","elementIndex","length","element","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","querySelector","err","console","error","nodeType","i","attributes","attribute","item","attributeName","name","allowedAttributes","includes","toLowerCase","removeAttribute","attributeValue","el","children","childNodes","win","window","config","Ionic","get","sanitizerEnabled","undefined","I","s"],"mappings":"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","sourcesContent":["/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nvar sanitizeDOMString = function (untrustedString) {\n    try {\n        if (untrustedString instanceof IonicSafeString) {\n            return untrustedString.value;\n        }\n        if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        var documentFragment_1 = document.createDocumentFragment();\n        var workingDiv = document.createElement('div');\n        documentFragment_1.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(function (blockedTag) {\n            var getElementsToRemove = documentFragment_1.querySelectorAll(blockedTag);\n            for (var elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                var element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment_1.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                var childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (var childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        var dfChildren = getElementChildren(documentFragment_1);\n        /* tslint:disable-next-line */\n        for (var childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        var fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment_1);\n        // First child is always the div we did our work in\n        var getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nvar sanitizeElement = function (element) {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (var i = element.attributes.length - 1; i >= 0; i--) {\n        var attribute = element.attributes.item(i);\n        var attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        var attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    var childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (var i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nvar getElementChildren = function (el) {\n    return (el.children != null) ? el.children : el.childNodes;\n};\nvar isSanitizerEnabled = function () {\n    var win = window;\n    var config = win && win.Ionic && win.Ionic.config;\n    if (config) {\n        if (config.get) {\n            return config.get('sanitizerEnabled', true);\n        }\n        else {\n            return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n        }\n    }\n    return true;\n};\nvar allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nvar blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nvar IonicSafeString = /** @class */ (function () {\n    function IonicSafeString(value) {\n        this.value = value;\n    }\n    return IonicSafeString;\n}());\nexport { IonicSafeString as I, sanitizeDOMString as s };\n"]},"metadata":{},"sourceType":"module"}