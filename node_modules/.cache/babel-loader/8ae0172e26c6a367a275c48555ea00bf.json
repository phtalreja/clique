{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\n/*\n Stencil Client Platform v1.17.1 | MIT Licensed | https://stenciljs.com\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\n\nvar safeSelector = function (selector) {\n  var placeholders = [];\n  var index = 0;\n  var content; // Replaces attribute selectors with placeholders.\n  // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n\n  selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(keep);\n    index++;\n    return replaceBy;\n  }); // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n  // WS and \"+\" would otherwise be interpreted as selector separators.\n\n  content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(exp);\n    index++;\n    return pseudo + replaceBy;\n  });\n  var ss = {\n    content: content,\n    placeholders: placeholders\n  };\n  return ss;\n};\n\nvar restoreSafeSelector = function (placeholders, content) {\n  return content.replace(/__ph-(\\d+)__/g, function (_, index) {\n    return placeholders[+index];\n  });\n};\n\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted'; // note: :host-context pre-processed to -shadowcsshostcontext.\n\nvar _polyfillHostContext = '-shadowcsscontext';\n\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\n\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\n\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n\nvar stripComments = function (input) {\n  return input.replace(_commentRe, '');\n};\n\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n\nvar extractCommentsWithHash = function (input) {\n  return input.match(_commentWithHashRe) || [];\n};\n\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\n\nvar processRules = function (input, ruleCallback) {\n  var inputWithEscapedBlocks = escapeBlocks(input);\n  var nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    var selector = m[2];\n    var content = '';\n    var suffix = m[4];\n    var contentPrefix = '';\n\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n\n    var cssRule = {\n      selector: selector,\n      content: content\n    };\n    var rule = ruleCallback(cssRule);\n    return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n  });\n};\n\nvar escapeBlocks = function (input) {\n  var inputParts = input.split(_curlyRe);\n  var resultParts = [];\n  var escapedBlocks = [];\n  var bracketCount = 0;\n  var currentBlockParts = [];\n\n  for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    var part = inputParts[partIndex];\n\n    if (part === CLOSE_CURLY) {\n      bracketCount--;\n    }\n\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n\n      resultParts.push(part);\n    }\n\n    if (part === OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n\n  var strEscapedBlocks = {\n    escapedString: resultParts.join(''),\n    blocks: escapedBlocks\n  };\n  return strEscapedBlocks;\n};\n\nvar insertPolyfillHostInCssText = function (selector) {\n  selector = selector.replace(_colonHostContextRe, _polyfillHostContext).replace(_colonHostRe, _polyfillHost).replace(_colonSlottedRe, _polyfillSlotted);\n  return selector;\n};\n\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n  // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n  return cssText.replace(regExp, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    if (m[2]) {\n      var parts = m[2].split(',');\n      var r = [];\n\n      for (var i = 0; i < parts.length; i++) {\n        var p = parts[i].trim();\n        if (!p) break;\n        r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n      }\n\n      return r.join(',');\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n};\n\nvar colonHostPartReplacer = function (host, part, suffix) {\n  return host + part.replace(_polyfillHost, '') + suffix;\n};\n\nvar convertColonHost = function (cssText) {\n  return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\n\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n  if (part.indexOf(_polyfillHost) > -1) {\n    return colonHostPartReplacer(host, part, suffix);\n  } else {\n    return host + part + suffix + ', ' + part + ' ' + host + suffix;\n  }\n};\n\nvar convertColonSlotted = function (cssText, slotScopeId) {\n  var slotClass = '.' + slotScopeId + ' > ';\n  var selectors = [];\n  cssText = cssText.replace(_cssColonSlottedRe, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    if (m[2]) {\n      var compound = m[2].trim();\n      var suffix = m[3];\n      var slottedSelector = slotClass + compound + suffix;\n      var prefixSelector = '';\n\n      for (var i = m[4] - 1; i >= 0; i--) {\n        var char = m[5][i];\n\n        if (char === '}' || char === ',') {\n          break;\n        }\n\n        prefixSelector = char + prefixSelector;\n      }\n\n      var orgSelector = prefixSelector + slottedSelector;\n      var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n\n      if (orgSelector.trim() !== addedSelector.trim()) {\n        var updatedSelector = addedSelector + \", \" + orgSelector;\n        selectors.push({\n          orgSelector: orgSelector,\n          updatedSelector: updatedSelector\n        });\n      }\n\n      return slottedSelector;\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n  return {\n    selectors: selectors,\n    cssText: cssText\n  };\n};\n\nvar convertColonHostContext = function (cssText) {\n  return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\n\nvar convertShadowDOMSelectors = function (cssText) {\n  return _shadowDOMSelectorsRe.reduce(function (result, pattern) {\n    return result.replace(pattern, ' ');\n  }, cssText);\n};\n\nvar makeScopeMatcher = function (scopeSelector) {\n  var lre = /\\[/g;\n  var rre = /\\]/g;\n  scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n  return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\n\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n  var re = makeScopeMatcher(scopeSelector);\n  return !re.test(selector);\n};\n\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n  // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n  _polyfillHostRe.lastIndex = 0;\n\n  if (_polyfillHostRe.test(selector)) {\n    var replaceBy_1 = \".\" + hostSelector;\n    return selector.replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n      return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n        return before + replaceBy_1 + colon + after;\n      });\n    }).replace(_polyfillHostRe, replaceBy_1 + ' ');\n  }\n\n  return scopeSelector + ' ' + selector;\n};\n\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n  var isRe = /\\[is=([^\\]]*)\\]/g;\n  scopeSelector = scopeSelector.replace(isRe, function (_) {\n    var parts = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      parts[_i - 1] = arguments[_i];\n    }\n\n    return parts[0];\n  });\n  var className = '.' + scopeSelector;\n\n  var _scopeSelectorPart = function (p) {\n    var scopedP = p.trim();\n\n    if (!scopedP) {\n      return '';\n    }\n\n    if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n      scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n    } else {\n      // remove :host since it should be unnecessary\n      var t = p.replace(_polyfillHostRe, '');\n\n      if (t.length > 0) {\n        var matches = t.match(/([^:]*)(:*)(.*)/);\n\n        if (matches) {\n          scopedP = matches[1] + className + matches[2] + matches[3];\n        }\n      }\n    }\n\n    return scopedP;\n  };\n\n  var safeContent = safeSelector(selector);\n  selector = safeContent.content;\n  var scopedSelector = '';\n  var startIndex = 0;\n  var res;\n  var sep = /( |>|\\+|~(?!=))\\s*/g; // If a selector appears before :host it should not be shimmed as it\n  // matches on ancestor elements and not on elements in the host's shadow\n  // `:host-context(div)` is transformed to\n  // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n  // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n  // Historically `component-tag:host` was matching the component so we also want to preserve\n  // this behavior to avoid breaking legacy apps (it should not match).\n  // The behavior should be:\n  // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n  // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n  //   `:host-context(tag)`)\n\n  var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1; // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n\n  var shouldScope = !hasHost;\n\n  while ((res = sep.exec(selector)) !== null) {\n    var separator = res[1];\n    var part_1 = selector.slice(startIndex, res.index).trim();\n    shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n    var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n    scopedSelector += scopedPart + \" \" + separator + \" \";\n    startIndex = sep.lastIndex;\n  }\n\n  var part = selector.substring(startIndex);\n  shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n  scopedSelector += shouldScope ? _scopeSelectorPart(part) : part; // replace the placeholders with their original values\n\n  return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\n\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n  return selector.split(',').map(function (shallowPart) {\n    if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n      return shallowPart.trim();\n    }\n\n    if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n      return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n    } else {\n      return shallowPart.trim();\n    }\n  }).join(', ');\n};\n\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n  return processRules(cssText, function (rule) {\n    var selector = rule.selector;\n    var content = rule.content;\n\n    if (rule.selector[0] !== '@') {\n      selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n    } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n      content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n    }\n\n    var cssRule = {\n      selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n      content: content\n    };\n    return cssRule;\n  });\n};\n\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n  cssText = insertPolyfillHostInCssText(cssText);\n  cssText = convertColonHost(cssText);\n  cssText = convertColonHostContext(cssText);\n  var slotted = convertColonSlotted(cssText, slotScopeId);\n  cssText = slotted.cssText;\n  cssText = convertShadowDOMSelectors(cssText);\n\n  if (scopeId) {\n    cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n  }\n\n  cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n  cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n  return {\n    cssText: cssText.trim(),\n    slottedSelectors: slotted.selectors\n  };\n};\n\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n  var hostScopeId = scopeId + '-h';\n  var slotScopeId = scopeId + '-s';\n  var commentsWithHash = extractCommentsWithHash(cssText);\n  cssText = stripComments(cssText);\n  var orgSelectors = [];\n\n  if (commentOriginalSelector) {\n    var processCommentedSelector_1 = function (rule) {\n      var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n      var comment = \"/*!@\" + rule.selector + \"*/\";\n      orgSelectors.push({\n        placeholder: placeholder,\n        comment: comment\n      });\n      rule.selector = placeholder + rule.selector;\n      return rule;\n    };\n\n    cssText = processRules(cssText, function (rule) {\n      if (rule.selector[0] !== '@') {\n        return processCommentedSelector_1(rule);\n      } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        rule.content = processRules(rule.content, processCommentedSelector_1);\n        return rule;\n      }\n\n      return rule;\n    });\n  }\n\n  var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n  cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n\n  if (commentOriginalSelector) {\n    orgSelectors.forEach(function (_a) {\n      var placeholder = _a.placeholder,\n          comment = _a.comment;\n      cssText = cssText.replace(placeholder, comment);\n    });\n  }\n\n  scoped.slottedSelectors.forEach(function (slottedSelector) {\n    cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n  });\n  return cssText;\n};\n\nexport { scopeCss };","map":{"version":3,"sources":["/Users/priyatalreja/Desktop/spectra-hacks/friendmatch/node_modules/@ionic/core/dist/esm-es5/shadow-css-fc98efba.js"],"names":["__spreadArrays","safeSelector","selector","placeholders","index","content","replace","_","keep","replaceBy","push","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","m","_i","arguments","length","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","parts","r","i","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotScopeId","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonHostContext","convertShadowDOMSelectors","reduce","result","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","test","applySimpleSelectorScope","hostSelector","lastIndex","replaceBy_1","before","colon","after","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","matches","safeContent","scopedSelector","startIndex","res","sep","hasHost","shouldScope","exec","separator","part_1","slice","scopedPart","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotted","slottedSelectors","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector_1","placeholder","comment","scoped","forEach","_a"],"mappings":"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","sourcesContent":["import { __spreadArrays } from \"tslib\";\n/*\n Stencil Client Platform v1.17.1 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content,\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks,\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotScopeId) {\n    var slotClass = '.' + slotScopeId + ' > ';\n    var selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var slottedSelector = slotClass + compound + suffix;\n            var prefixSelector = '';\n            for (var i = m[4] - 1; i >= 0; i--) {\n                var char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            var orgSelector = prefixSelector + slottedSelector;\n            var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                var updatedSelector = addedSelector + \", \" + orgSelector;\n                selectors.push({\n                    orgSelector: orgSelector,\n                    updatedSelector: updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors: selectors,\n        cssText: cssText,\n    };\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector\n        .split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content,\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    var slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach(function (slottedSelector) {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\nexport { scopeCss };\n"]},"metadata":{},"sourceType":"module"}