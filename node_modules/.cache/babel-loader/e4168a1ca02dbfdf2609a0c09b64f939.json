{"ast":null,"code":"var GestureController =\n/** @class */\nfunction () {\n  function GestureController() {\n    this.gestureId = 0;\n    this.requestedStart = new Map();\n    this.disabledGestures = new Map();\n    this.disabledScroll = new Set();\n  }\n  /**\n   * Creates a gesture delegate based on the GestureConfig passed\n   */\n\n\n  GestureController.prototype.createGesture = function (config) {\n    return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\n  };\n  /**\n   * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n   */\n\n\n  GestureController.prototype.createBlocker = function (opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n  };\n\n  GestureController.prototype.start = function (gestureName, id, priority) {\n    if (!this.canStart(gestureName)) {\n      this.requestedStart.delete(id);\n      return false;\n    }\n\n    this.requestedStart.set(id, priority);\n    return true;\n  };\n\n  GestureController.prototype.capture = function (gestureName, id, priority) {\n    if (!this.start(gestureName, id, priority)) {\n      return false;\n    }\n\n    var requestedStart = this.requestedStart;\n    var maxPriority = -10000;\n    requestedStart.forEach(function (value) {\n      maxPriority = Math.max(maxPriority, value);\n    });\n\n    if (maxPriority === priority) {\n      this.capturedId = id;\n      requestedStart.clear();\n      var event = new CustomEvent('ionGestureCaptured', {\n        detail: {\n          gestureName: gestureName\n        }\n      });\n      document.dispatchEvent(event);\n      return true;\n    }\n\n    requestedStart.delete(id);\n    return false;\n  };\n\n  GestureController.prototype.release = function (id) {\n    this.requestedStart.delete(id);\n\n    if (this.capturedId === id) {\n      this.capturedId = undefined;\n    }\n  };\n\n  GestureController.prototype.disableGesture = function (gestureName, id) {\n    var set = this.disabledGestures.get(gestureName);\n\n    if (set === undefined) {\n      set = new Set();\n      this.disabledGestures.set(gestureName, set);\n    }\n\n    set.add(id);\n  };\n\n  GestureController.prototype.enableGesture = function (gestureName, id) {\n    var set = this.disabledGestures.get(gestureName);\n\n    if (set !== undefined) {\n      set.delete(id);\n    }\n  };\n\n  GestureController.prototype.disableScroll = function (id) {\n    this.disabledScroll.add(id);\n\n    if (this.disabledScroll.size === 1) {\n      document.body.classList.add(BACKDROP_NO_SCROLL);\n    }\n  };\n\n  GestureController.prototype.enableScroll = function (id) {\n    this.disabledScroll.delete(id);\n\n    if (this.disabledScroll.size === 0) {\n      document.body.classList.remove(BACKDROP_NO_SCROLL);\n    }\n  };\n\n  GestureController.prototype.canStart = function (gestureName) {\n    if (this.capturedId !== undefined) {\n      // a gesture already captured\n      return false;\n    }\n\n    if (this.isDisabled(gestureName)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  GestureController.prototype.isCaptured = function () {\n    return this.capturedId !== undefined;\n  };\n\n  GestureController.prototype.isScrollDisabled = function () {\n    return this.disabledScroll.size > 0;\n  };\n\n  GestureController.prototype.isDisabled = function (gestureName) {\n    var disabled = this.disabledGestures.get(gestureName);\n\n    if (disabled && disabled.size > 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  GestureController.prototype.newID = function () {\n    this.gestureId++;\n    return this.gestureId;\n  };\n\n  return GestureController;\n}();\n\nvar GestureDelegate =\n/** @class */\nfunction () {\n  function GestureDelegate(ctrl, id, name, priority, disableScroll) {\n    this.id = id;\n    this.name = name;\n    this.disableScroll = disableScroll;\n    this.priority = priority * 1000000 + id;\n    this.ctrl = ctrl;\n  }\n\n  GestureDelegate.prototype.canStart = function () {\n    if (!this.ctrl) {\n      return false;\n    }\n\n    return this.ctrl.canStart(this.name);\n  };\n\n  GestureDelegate.prototype.start = function () {\n    if (!this.ctrl) {\n      return false;\n    }\n\n    return this.ctrl.start(this.name, this.id, this.priority);\n  };\n\n  GestureDelegate.prototype.capture = function () {\n    if (!this.ctrl) {\n      return false;\n    }\n\n    var captured = this.ctrl.capture(this.name, this.id, this.priority);\n\n    if (captured && this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n\n    return captured;\n  };\n\n  GestureDelegate.prototype.release = function () {\n    if (this.ctrl) {\n      this.ctrl.release(this.id);\n\n      if (this.disableScroll) {\n        this.ctrl.enableScroll(this.id);\n      }\n    }\n  };\n\n  GestureDelegate.prototype.destroy = function () {\n    this.release();\n    this.ctrl = undefined;\n  };\n\n  return GestureDelegate;\n}();\n\nvar BlockerDelegate =\n/** @class */\nfunction () {\n  function BlockerDelegate(ctrl, id, disable, disableScroll) {\n    this.id = id;\n    this.disable = disable;\n    this.disableScroll = disableScroll;\n    this.ctrl = ctrl;\n  }\n\n  BlockerDelegate.prototype.block = function () {\n    if (!this.ctrl) {\n      return;\n    }\n\n    if (this.disable) {\n      for (var _i = 0, _a = this.disable; _i < _a.length; _i++) {\n        var gesture = _a[_i];\n        this.ctrl.disableGesture(gesture, this.id);\n      }\n    }\n\n    if (this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n  };\n\n  BlockerDelegate.prototype.unblock = function () {\n    if (!this.ctrl) {\n      return;\n    }\n\n    if (this.disable) {\n      for (var _i = 0, _a = this.disable; _i < _a.length; _i++) {\n        var gesture = _a[_i];\n        this.ctrl.enableGesture(gesture, this.id);\n      }\n    }\n\n    if (this.disableScroll) {\n      this.ctrl.enableScroll(this.id);\n    }\n  };\n\n  BlockerDelegate.prototype.destroy = function () {\n    this.unblock();\n    this.ctrl = undefined;\n  };\n\n  return BlockerDelegate;\n}();\n\nvar BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nvar GESTURE_CONTROLLER = new GestureController();\nexport { GESTURE_CONTROLLER as G };","map":{"version":3,"sources":["/Users/priyatalreja/Desktop/spectra-hacks/friendmatch/node_modules/@ionic/core/dist/esm-es5/gesture-controller-89173521.js"],"names":["GestureController","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","prototype","createGesture","config","GestureDelegate","newID","name","priority","disableScroll","createBlocker","opts","BlockerDelegate","disable","start","gestureName","id","canStart","delete","set","capture","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","release","undefined","disableGesture","get","add","enableGesture","size","body","classList","BACKDROP_NO_SCROLL","enableScroll","remove","isDisabled","isCaptured","isScrollDisabled","disabled","ctrl","captured","destroy","block","_i","_a","length","gesture","unblock","GESTURE_CONTROLLER","G"],"mappings":"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","sourcesContent":["var GestureController = /** @class */ (function () {\n    function GestureController() {\n        this.gestureId = 0;\n        this.requestedStart = new Map();\n        this.disabledGestures = new Map();\n        this.disabledScroll = new Set();\n    }\n    /**\n     * Creates a gesture delegate based on the GestureConfig passed\n     */\n    GestureController.prototype.createGesture = function (config) {\n        return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\n    };\n    /**\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n     */\n    GestureController.prototype.createBlocker = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n    };\n    GestureController.prototype.start = function (gestureName, id, priority) {\n        if (!this.canStart(gestureName)) {\n            this.requestedStart.delete(id);\n            return false;\n        }\n        this.requestedStart.set(id, priority);\n        return true;\n    };\n    GestureController.prototype.capture = function (gestureName, id, priority) {\n        if (!this.start(gestureName, id, priority)) {\n            return false;\n        }\n        var requestedStart = this.requestedStart;\n        var maxPriority = -10000;\n        requestedStart.forEach(function (value) {\n            maxPriority = Math.max(maxPriority, value);\n        });\n        if (maxPriority === priority) {\n            this.capturedId = id;\n            requestedStart.clear();\n            var event = new CustomEvent('ionGestureCaptured', { detail: { gestureName: gestureName } });\n            document.dispatchEvent(event);\n            return true;\n        }\n        requestedStart.delete(id);\n        return false;\n    };\n    GestureController.prototype.release = function (id) {\n        this.requestedStart.delete(id);\n        if (this.capturedId === id) {\n            this.capturedId = undefined;\n        }\n    };\n    GestureController.prototype.disableGesture = function (gestureName, id) {\n        var set = this.disabledGestures.get(gestureName);\n        if (set === undefined) {\n            set = new Set();\n            this.disabledGestures.set(gestureName, set);\n        }\n        set.add(id);\n    };\n    GestureController.prototype.enableGesture = function (gestureName, id) {\n        var set = this.disabledGestures.get(gestureName);\n        if (set !== undefined) {\n            set.delete(id);\n        }\n    };\n    GestureController.prototype.disableScroll = function (id) {\n        this.disabledScroll.add(id);\n        if (this.disabledScroll.size === 1) {\n            document.body.classList.add(BACKDROP_NO_SCROLL);\n        }\n    };\n    GestureController.prototype.enableScroll = function (id) {\n        this.disabledScroll.delete(id);\n        if (this.disabledScroll.size === 0) {\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\n        }\n    };\n    GestureController.prototype.canStart = function (gestureName) {\n        if (this.capturedId !== undefined) {\n            // a gesture already captured\n            return false;\n        }\n        if (this.isDisabled(gestureName)) {\n            return false;\n        }\n        return true;\n    };\n    GestureController.prototype.isCaptured = function () {\n        return this.capturedId !== undefined;\n    };\n    GestureController.prototype.isScrollDisabled = function () {\n        return this.disabledScroll.size > 0;\n    };\n    GestureController.prototype.isDisabled = function (gestureName) {\n        var disabled = this.disabledGestures.get(gestureName);\n        if (disabled && disabled.size > 0) {\n            return true;\n        }\n        return false;\n    };\n    GestureController.prototype.newID = function () {\n        this.gestureId++;\n        return this.gestureId;\n    };\n    return GestureController;\n}());\nvar GestureDelegate = /** @class */ (function () {\n    function GestureDelegate(ctrl, id, name, priority, disableScroll) {\n        this.id = id;\n        this.name = name;\n        this.disableScroll = disableScroll;\n        this.priority = priority * 1000000 + id;\n        this.ctrl = ctrl;\n    }\n    GestureDelegate.prototype.canStart = function () {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.canStart(this.name);\n    };\n    GestureDelegate.prototype.start = function () {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.start(this.name, this.id, this.priority);\n    };\n    GestureDelegate.prototype.capture = function () {\n        if (!this.ctrl) {\n            return false;\n        }\n        var captured = this.ctrl.capture(this.name, this.id, this.priority);\n        if (captured && this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n        return captured;\n    };\n    GestureDelegate.prototype.release = function () {\n        if (this.ctrl) {\n            this.ctrl.release(this.id);\n            if (this.disableScroll) {\n                this.ctrl.enableScroll(this.id);\n            }\n        }\n    };\n    GestureDelegate.prototype.destroy = function () {\n        this.release();\n        this.ctrl = undefined;\n    };\n    return GestureDelegate;\n}());\nvar BlockerDelegate = /** @class */ (function () {\n    function BlockerDelegate(ctrl, id, disable, disableScroll) {\n        this.id = id;\n        this.disable = disable;\n        this.disableScroll = disableScroll;\n        this.ctrl = ctrl;\n    }\n    BlockerDelegate.prototype.block = function () {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (var _i = 0, _a = this.disable; _i < _a.length; _i++) {\n                var gesture = _a[_i];\n                this.ctrl.disableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n    };\n    BlockerDelegate.prototype.unblock = function () {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (var _i = 0, _a = this.disable; _i < _a.length; _i++) {\n                var gesture = _a[_i];\n                this.ctrl.enableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.enableScroll(this.id);\n        }\n    };\n    BlockerDelegate.prototype.destroy = function () {\n        this.unblock();\n        this.ctrl = undefined;\n    };\n    return BlockerDelegate;\n}());\nvar BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nvar GESTURE_CONTROLLER = new GestureController();\nexport { GESTURE_CONTROLLER as G };\n"]},"metadata":{},"sourceType":"module"}