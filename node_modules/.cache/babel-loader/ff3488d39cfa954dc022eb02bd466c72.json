{"ast":null,"code":"import { g as getAssetPath } from './index-e0fb4cab.js';\nvar CACHED_MAP;\n\nvar getIconMap = function () {\n  if (typeof window === 'undefined') {\n    return new Map();\n  } else {\n    if (!CACHED_MAP) {\n      var win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n\n    return CACHED_MAP;\n  }\n};\n\nvar addIcons = function (icons) {\n  var map = getIconMap();\n  Object.keys(icons).forEach(function (name) {\n    return map.set(name, icons[name]);\n  });\n};\n\nvar getUrl = function (i) {\n  var url = getSrc(i.src);\n\n  if (url) {\n    return url;\n  }\n\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n\n  if (url) {\n    return getNamedUrl(url);\n  }\n\n  if (i.icon) {\n    url = getSrc(i.icon);\n\n    if (url) {\n      return url;\n    }\n\n    url = getSrc(i.icon[i.mode]);\n\n    if (url) {\n      return url;\n    }\n  }\n\n  return null;\n};\n\nvar getNamedUrl = function (iconName) {\n  var url = getIconMap().get(iconName);\n\n  if (url) {\n    return url;\n  }\n\n  return getAssetPath(\"svg/\" + iconName + \".svg\");\n};\n\nvar getName = function (iconName, icon, mode, ios, md) {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md'; // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  } else if (md && mode === 'md') {\n    iconName = toLower(md);\n  } else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  } // only allow alpha characters and dash\n\n\n  var invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n\n  if (invalidChars !== '') {\n    return null;\n  }\n\n  return iconName;\n};\n\nvar getSrc = function (src) {\n  if (isStr(src)) {\n    src = src.trim();\n\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n\n  return null;\n};\n\nvar isSrc = function (str) {\n  return str.length > 0 && /(\\/|\\.)/.test(str);\n};\n\nvar isStr = function (val) {\n  return typeof val === 'string';\n};\n\nvar toLower = function (val) {\n  return val.toLowerCase();\n};\n\nexport { addIcons as a, getName as b, getUrl as g, isStr as i };","map":{"version":3,"sources":["/Users/priyatalreja/Desktop/spectra/friend-match/node_modules/ionicons/dist/esm-es5/utils-6f78da88.js"],"names":["g","getAssetPath","CACHED_MAP","getIconMap","window","Map","win","Ionicons","map","addIcons","icons","Object","keys","forEach","name","set","getUrl","i","url","getSrc","src","getName","icon","mode","ios","md","getNamedUrl","iconName","get","toLower","isSrc","isStr","trim","invalidChars","replace","str","length","test","val","toLowerCase","a","b"],"mappings":"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","sourcesContent":["import { g as getAssetPath } from './index-e0fb4cab.js';\nvar CACHED_MAP;\nvar getIconMap = function () {\n    if (typeof window === 'undefined') {\n        return new Map();\n    }\n    else {\n        if (!CACHED_MAP) {\n            var win = window;\n            win.Ionicons = win.Ionicons || {};\n            CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n        }\n        return CACHED_MAP;\n    }\n};\nvar addIcons = function (icons) {\n    var map = getIconMap();\n    Object.keys(icons).forEach(function (name) { return map.set(name, icons[name]); });\n};\nvar getUrl = function (i) {\n    var url = getSrc(i.src);\n    if (url) {\n        return url;\n    }\n    url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n    if (url) {\n        return getNamedUrl(url);\n    }\n    if (i.icon) {\n        url = getSrc(i.icon);\n        if (url) {\n            return url;\n        }\n        url = getSrc(i.icon[i.mode]);\n        if (url) {\n            return url;\n        }\n    }\n    return null;\n};\nvar getNamedUrl = function (iconName) {\n    var url = getIconMap().get(iconName);\n    if (url) {\n        return url;\n    }\n    return getAssetPath(\"svg/\" + iconName + \".svg\");\n};\nvar getName = function (iconName, icon, mode, ios, md) {\n    // default to \"md\" if somehow the mode wasn't set\n    mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n    // if an icon was passed in using the ios or md attributes\n    // set the iconName to whatever was passed in\n    if (ios && mode === 'ios') {\n        iconName = toLower(ios);\n    }\n    else if (md && mode === 'md') {\n        iconName = toLower(md);\n    }\n    else {\n        if (!iconName && icon && !isSrc(icon)) {\n            iconName = icon;\n        }\n        if (isStr(iconName)) {\n            iconName = toLower(iconName);\n        }\n    }\n    if (!isStr(iconName) || iconName.trim() === '') {\n        return null;\n    }\n    // only allow alpha characters and dash\n    var invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n    if (invalidChars !== '') {\n        return null;\n    }\n    return iconName;\n};\nvar getSrc = function (src) {\n    if (isStr(src)) {\n        src = src.trim();\n        if (isSrc(src)) {\n            return src;\n        }\n    }\n    return null;\n};\nvar isSrc = function (str) { return str.length > 0 && /(\\/|\\.)/.test(str); };\nvar isStr = function (val) { return typeof val === 'string'; };\nvar toLower = function (val) { return val.toLowerCase(); };\nexport { addIcons as a, getName as b, getUrl as g, isStr as i };\n"]},"metadata":{},"sourceType":"module"}