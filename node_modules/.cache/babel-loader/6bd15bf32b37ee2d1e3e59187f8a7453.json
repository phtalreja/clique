{"ast":null,"code":"import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-44bf8136.js';\nimport { b as getIonMode } from './ionic-global-837be8f3.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-3f0b0c04.js';\nvar checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\nvar checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nvar Checkbox =\n/** @class */\nfunction () {\n  function Checkbox(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = \"ion-cb-\" + checkboxIds++;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     */\n\n    this.value = 'on';\n\n    this.onClick = function () {\n      _this.setFocus();\n\n      _this.checked = !_this.checked;\n      _this.indeterminate = false;\n    };\n\n    this.onFocus = function () {\n      _this.ionFocus.emit();\n    };\n\n    this.onBlur = function () {\n      _this.ionBlur.emit();\n    };\n  }\n\n  Checkbox.prototype.componentWillLoad = function () {\n    this.emitStyle();\n  };\n\n  Checkbox.prototype.checkedChanged = function (isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  };\n\n  Checkbox.prototype.disabledChanged = function () {\n    this.emitStyle();\n  };\n\n  Checkbox.prototype.emitStyle = function () {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled\n    });\n  };\n\n  Checkbox.prototype.setFocus = function () {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  };\n\n  Checkbox.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this,\n        inputId = _b.inputId,\n        indeterminate = _b.indeterminate,\n        disabled = _b.disabled,\n        checked = _b.checked,\n        value = _b.value,\n        color = _b.color,\n        el = _b.el;\n\n    var labelId = inputId + '-lbl';\n    var mode = getIonMode(this);\n    var label = findItemLabel(el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    renderHiddenInput(true, el, this.name, checked ? value : '', disabled);\n    var path = indeterminate ? h(\"path\", {\n      d: \"M6 12L18 12\",\n      part: \"mark\"\n    }) : h(\"path\", {\n      d: \"M5.9,12.5l3.8,3.8l8.8-8.8\",\n      part: \"mark\"\n    });\n\n    if (mode === 'md') {\n      path = indeterminate ? h(\"path\", {\n        d: \"M2 12H22\",\n        part: \"mark\"\n      }) : h(\"path\", {\n        d: \"M1.73,12.91 8.1,19.28 22.79,4.59\",\n        part: \"mark\"\n      });\n    }\n\n    return h(Host, {\n      onClick: this.onClick,\n      role: \"checkbox\",\n      \"aria-disabled\": disabled ? 'true' : null,\n      \"aria-checked\": \"\" + checked,\n      \"aria-labelledby\": labelId,\n      class: Object.assign(Object.assign({}, createColorClasses(color)), (_a = {}, _a[mode] = true, _a['in-item'] = hostContext('ion-item', el), _a['checkbox-checked'] = checked, _a['checkbox-disabled'] = disabled, _a['checkbox-indeterminate'] = indeterminate, _a['interactive'] = true, _a))\n    }, h(\"svg\", {\n      class: \"checkbox-icon\",\n      viewBox: \"0 0 24 24\",\n      part: \"container\"\n    }, path), h(\"button\", {\n      type: \"button\",\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      disabled: this.disabled,\n      ref: function ref(btnEl) {\n        return _this.buttonEl = btnEl;\n      }\n    }));\n  };\n\n  Object.defineProperty(Checkbox.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Checkbox, \"watchers\", {\n    get: function get() {\n      return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Checkbox;\n}();\n\nvar checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\nexport { Checkbox as ion_checkbox };","map":{"version":3,"sources":["/Users/priyatalreja/Desktop/spectra-hacks/friendmatch/node_modules/@ionic/core/dist/esm-es5/ion-checkbox.entry.js"],"names":["r","registerInstance","e","createEvent","h","H","Host","i","getElement","b","getIonMode","f","findItemLabel","a","renderHiddenInput","c","createColorClasses","hostContext","checkboxIosCss","checkboxMdCss","Checkbox","hostRef","_this","ionChange","ionFocus","ionBlur","ionStyle","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","setFocus","onFocus","emit","onBlur","prototype","componentWillLoad","emitStyle","checkedChanged","isChecked","disabledChanged","buttonEl","focus","render","_a","_b","color","el","labelId","mode","label","id","path","d","part","role","class","Object","assign","viewBox","type","ref","btnEl","defineProperty","get","enumerable","configurable","style","ios","md","ion_checkbox"],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-44bf8136.js';\nimport { b as getIonMode } from './ionic-global-837be8f3.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-3f0b0c04.js';\nvar checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\nvar checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\nvar Checkbox = /** @class */ (function () {\n    function Checkbox(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.inputId = \"ion-cb-\" + checkboxIds++;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = function () {\n            _this.setFocus();\n            _this.checked = !_this.checked;\n            _this.indeterminate = false;\n        };\n        this.onFocus = function () {\n            _this.ionFocus.emit();\n        };\n        this.onBlur = function () {\n            _this.ionBlur.emit();\n        };\n    }\n    Checkbox.prototype.componentWillLoad = function () {\n        this.emitStyle();\n    };\n    Checkbox.prototype.checkedChanged = function (isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n        this.emitStyle();\n    };\n    Checkbox.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    Checkbox.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'checkbox-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    };\n    Checkbox.prototype.setFocus = function () {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    };\n    Checkbox.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var _b = this, inputId = _b.inputId, indeterminate = _b.indeterminate, disabled = _b.disabled, checked = _b.checked, value = _b.value, color = _b.color, el = _b.el;\n        var labelId = inputId + '-lbl';\n        var mode = getIonMode(this);\n        var label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        var path = indeterminate\n            ? h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })\n            : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" });\n        if (mode === 'md') {\n            path = indeterminate\n                ? h(\"path\", { d: \"M2 12H22\", part: \"mark\" })\n                : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" });\n        }\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": \"\" + checked, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), (_a = {}, _a[mode] = true, _a['in-item'] = hostContext('ion-item', el), _a['checkbox-checked'] = checked, _a['checkbox-disabled'] = disabled, _a['checkbox-indeterminate'] = indeterminate, _a['interactive'] = true, _a)) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: function (btnEl) { return _this.buttonEl = btnEl; } })));\n    };\n    Object.defineProperty(Checkbox.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox, \"watchers\", {\n        get: function () {\n            return {\n                \"checked\": [\"checkedChanged\"],\n                \"disabled\": [\"disabledChanged\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Checkbox;\n}());\nvar checkboxIds = 0;\nCheckbox.style = {\n    ios: checkboxIosCss,\n    md: checkboxMdCss\n};\nexport { Checkbox as ion_checkbox };\n"]},"metadata":{},"sourceType":"module"}